<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vinux.service.dao.demo.DemoMapper" >
  <resultMap id="BaseResultMap" type="vinux.service.entity.demo.Demo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="BIGINT" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="vinux.service.entity.demo.Demo" extends="BaseResultMap" >
    <result column="other" property="other" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, nickname, age, school, sex, address, create_date
  </sql>
  <sql id="Blob_Column_List" >
    other
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Demo
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  
  <!-- Custom select Demo 
  <select id="selectAll" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from Demo
    where 1=1
  </select>
  -->
  
  <!-- 分页查询所有属性 -->
	<select id="selectAll" resultMap="BaseResultMap">
	select 
    <include refid="Base_Column_List" />
    from Demo
    where 1=1
    
      order by id desc
      <!-- 分页 -->
      <if test="page_sql != null and page_sql !=''"  >
       ${page_sql}
      </if>
	</select>
	
	<select id="selectAllCount" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List" />
		FROM Demo
	</select>
	
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from Demo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="vinux.service.entity.demo.Demo" useGeneratedKeys="true" keyProperty="id">
    insert into Demo (id, name, nickname, 
      age, school, sex, address, 
      create_date, other)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{age,jdbcType=BIGINT}, #{school,jdbcType=VARCHAR}, #{sex,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{other,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="vinux.service.entity.demo.Demo" useGeneratedKeys="true" keyProperty="id">
    insert into Demo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="other != null" >
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=BIGINT},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="other != null" >
        #{other,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="vinux.service.entity.demo.Demo" >
    update Demo
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=BIGINT},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="vinux.service.entity.demo.Demo" >
    update Demo
    set name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      age = #{age,jdbcType=BIGINT},
      school = #{school,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      other = #{other,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vinux.service.entity.demo.Demo" >
    update Demo
    set name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      age = #{age,jdbcType=BIGINT},
      school = #{school,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>