一、框架介绍。
 
 
 1、框架使用
     (1)vinux.project.service 结构介绍
                  包名vinux.service 其下面有 5 个包(common, core, dao, entity, mapper)：
             1.1 common ， 框架公用工具包，包含5块内容：
                      1.1.1 base ：包括两个类, APIResult 和  BaseController；APIResult 调用公共接口返回值结果集，包括执行状态、执行信息和返回的数据。
                          BaseController web端Controller的基类。
                      1.1.2 config : 获取配置文件辅助包。
                      1.1.3 page ： 提供分页查询。
                      1.1.4 statics ： 常量定义。
                      1.1.5 util ： 提供常用的工具类(StringUtils, VinuxPostMethod[HttpClient的封装])
             1.2  core ， 框架核心库 ,使用者未经允许不能修改
             1.3  dao , 数据层接口包，此包下面是业务数据模块包，业务数据模块包包名只能以业务模块名称命名，
                                                          业务数据模块包下面存放Mapper，dao包的根目录不允许存放Mapper。
                                                          例：vinux.service.dao.business1, vinux.service.dao.business2
             1.4  entity , 实体包，此包下面是业务实体包，业务实体包只能以业务模块名称命名，业务实体包下面存放业务实体。
             		     例：vinux.service.entity.business1, vinux.service.entity.business2
             1.5  mapper , 数据层sql xml，此包下面的包也以业务模块名称命名，业务包名存放xml
                                                          例：vinux.service.mapper.business1, vinux.service.mapper.business2
             （注：dao , entity, mapper 包的子级包必须与业务包一一对应）
        
         （2）vinux.project.web 结构介绍
        1、 包 vinux.web 包括 3 部分，common(公共模块)， demo(业务模块，可以有多个)，open(对外交互对接的模块)
         1.1 common 公共模块，如：登陆，退出登陆，错误页面404 、500等。
         1.2 demo 业务模块，多个业务模块多个包且与demo同级
         1.3 open 对外交互模块，所有对外开放的接口，或者调用其他项目接口的接口都在该包里面定义，
                                          并且访问路径必须是   域名 /open/项目名称/业务名称/XX..method 格式。
        2、webapp
           2.1 css 
               2.1.1 common 公用CSS样式表
               2.1.1 demo 业务外部CSS样式表，多个业务模块不共用的CSS按业务分开管理
            2.2 images
               2.2.1 common 公用的图片
               2.2.2 demo 业务模块使用的图片
               2.2.3 tmp 临时图片存放位置，不用上到线的图片。
             2.3 js
               2.3.1 common 公用的js文件，例如：jQuery文件，v.js(v.js 说明：登陆，是否登陆校验，退出登陆等)
               2.3.2 demo 业务js存放位置
             2.4 WEB-INF / ftl 页面存放位置
         3、 资源文件夹resources
             3.1  config.properties 项目常规配置，包括本项目域名，项目缓存key、缓存区域配置
             3.2  jdbc.properties 系统各种DB、缓存配置
             3.3  open.config.properties   和其它系统交互之间的配置
             3.4  open.url.properties  和其它系统交互之间的URL配置
             3.5  shiro_base_auth.properties  资源访问拦截配置，拦截级别越高配置序号越靠后
             3.6  shiro-config.properties Cookie相关配置，使用时需要修改 3个配置(每个项目唯一)， cipher.key(basic64加密密文)、
             							cookie.key和cookie.rememberMe.key 
             